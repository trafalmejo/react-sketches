{"version":3,"sources":["components/counter.jsx","components/dice.jsx","components/dices.jsx","index.js"],"names":["Component","Dice","state","visibility","fadeIn","setState","fadeOut","handleDecrease","changePreviousNumber","handleDelete","handleClickDice","changeRandomNumber","styles","fontSize","this","props","size","lineHeight","width","height","className","style","onMouseEnter","onMouseLeave","getNumber","role","aria-label","onClick","onDecrement","dice","onIncrement","onDelete","id","classes","value","Dices","counters","dices","handleDecreaseSize","handleIncreaseSize","changeNextNumber","index","indexOf","getNumberRepetitions","handleDeleteDice","diceid","filter","d","handleAddDice","random","Math","floor","idd","length","push","handleReset","handleRandom","map","counter","i","element","key","onIncreaseSize","onDecreaseSize","type","console","log","ReactDOM","render","amount","document","getElementById"],"mappings":"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","file":"static/js/main.7e287b72.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  state = {\r\n    title: \"Item\",\r\n    count: 0,\r\n    tags: [\"tag1\", \"tag2\", \"tag3\"],\r\n    imgUrl: \"https://picsum.photos/200\"\r\n  };\r\n\r\n  styles = {\r\n    fontSize: \"50px\",\r\n    fontWeight: \"bold\"\r\n  };\r\n\r\n  //   constructor() {\r\n  //     super();\r\n  //     this.handleIncrement = this.handleIncrement.bind(this);\r\n  //   }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <img src={this.state.imgUrl} alt=\"\"></img>\r\n        {/* Conditional Render */}\r\n        {this.state.tags.length === 0 && (\r\n          <span style={this.styles}>\"Please create a new tag\"</span>\r\n        )}\r\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n        <button\r\n          onClick={this.handleIncrement}\r\n          className=\"btn btn-secondary btn-sm\"\r\n        >\r\n          Increment\r\n        </button>\r\n        <ul>\r\n          {this.state.tags.map(tag => (\r\n            <li key={tag}>{tag}</li>\r\n          ))}\r\n        </ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  //You HAVE TO bind the handlers ALWAYS.\r\n  // if you use arrow functions is already binded\r\n  //++ does NOT work\r\n  handleIncrement = () => {\r\n    this.setState({ count: this.state.count + 1 });\r\n    console.log(\"incrementing...\", this.state.count);\r\n  };\r\n\r\n  getBadgeClasses() {\r\n    let classes = \"badge m-2 badge-\";\r\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    const { count } = this.state;\r\n    return count === 0 ? \"Zero\" : count;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n\r\n//or\r\n//export default class Counter...\r\n","import React, { Component } from \"react\";\r\n\r\nclass Dice extends Component {\r\n  // this is a local state and is not desirable if I want to change\r\n  state = {\r\n    // dsize: this.props.size,\r\n    // number: this.props.dice.value,\r\n    visibility: \"invisible\"\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props.size);\r\n    var styles = {\r\n      fontSize: this.props.size,\r\n      lineHeight: 0,\r\n      width: this.props.size,\r\n      height: this.props.size\r\n    };\r\n\r\n    return (\r\n      <div className=\"d-inline-block\">\r\n        <div\r\n          className=\"position-relative\"\r\n          style={styles}\r\n          onMouseEnter={this.fadeIn}\r\n          onMouseLeave={this.fadeOut}\r\n        >\r\n          <span\r\n            className={\"position-absolute dice dice-\" + this.getNumber()}\r\n          ></span>\r\n          <div\r\n            style={{\r\n              width: \"100%\"\r\n            }}\r\n            role=\"group\"\r\n            aria-label=\"...\"\r\n            className={\r\n              \"btn-group btn-group-sm \" +\r\n              this.state.visibility +\r\n              \" \" +\r\n              \"position-absolute\"\r\n            }\r\n          >\r\n            <button\r\n              className=\"btn btn-secondary\"\r\n              onClick={() => this.props.onDecrement(this.props.dice)}\r\n            >\r\n              <span className=\"glyphicon\">&#x2212;</span>\r\n            </button>\r\n            <button\r\n              className=\"btn btn-primary \"\r\n              onClick={() => this.props.onIncrement(this.props.dice)}\r\n            >\r\n              <span className=\"glyphicon\">&#x2b;</span>\r\n            </button>\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => this.props.onDelete(this.props.dice.id)}\r\n            >\r\n              <span className=\"glyphicon\">x</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  fadeIn = () => {\r\n    this.setState({ visibility: \"visible\" });\r\n  };\r\n  fadeOut = () => {\r\n    this.setState({ visibility: \"invisible\" });\r\n  };\r\n  handleDecrease = () => {\r\n    this.changePreviousNumber();\r\n  };\r\n  handleDelete = () => {};\r\n  handleClickDice = () => {\r\n    this.changeRandomNumber();\r\n  };\r\n  getNumber() {\r\n    let classes = \"dice dice-\";\r\n    classes += this.props.dice.value;\r\n    return classes;\r\n  }\r\n}\r\n\r\nexport default Dice;\r\n","import React, { Component } from \"react\";\r\nimport Dice from \"./dice\";\r\n\r\nclass Dices extends Component {\r\n  state = {\r\n    size: 100,\r\n    counters: [0, 0, 0, 0, 0, 0],\r\n    dices: []\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"\" style={{ lineHeight: 0 }}>\r\n        {/* value and selected attributes are passed as props */}\r\n        {/* props are read -only, and can not be changed */}\r\n        {/* handleDeleteDice is being send as a prop to have access to this method */}\r\n        {this.state.dices.map(dice => (\r\n          <Dice\r\n            key={dice.id}\r\n            onDelete={this.handleDeleteDice}\r\n            dice={dice}\r\n            size={this.state.size}\r\n            onIncrement={this.changeNextNumber}\r\n            onDecrement={this.changePreviousNumber}\r\n            onIncreaseSize={this.onIncreaseSize}\r\n            onDecreaseSize={this.onDecreaseSize}\r\n          />\r\n        ))}\r\n        <nav className=\"navbar fixed-bottom navbar-dark bg-dark d-flex flex-row\">\r\n          <span className=\"navbar-text mr-auto p-2\">HOW RANDOM </span>\r\n          <span className=\"navbar-text mr-auto p-2\">\r\n            {this.state.counters.map((value, index) => {\r\n              return (\r\n                <span key={index} className=\"badge badge-light m-1 p-2\">\r\n                  {\"#\" + (index + 1) + \": \"}\r\n                  {this.state.counters[index]}\r\n                </span>\r\n              );\r\n            })}\r\n          </span>\r\n          <div className=\"btn-group\" role=\"toolbar\" aria-label=\"...\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary p-2 w-50\"\r\n              onClick={this.handleDecreaseSize}\r\n            >\r\n              -\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary p-2 w-50\"\r\n              onClick={this.handleIncreaseSize}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary m-1 p-2\"\r\n            onClick={this.handleAddDice}\r\n          >\r\n            Add +\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-info m-1 p-2\"\r\n            onClick={this.handleRandom}\r\n          >\r\n            Random\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger m-1 p-2\"\r\n            onClick={this.handleReset}\r\n          >\r\n            Reset\r\n          </button>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleDecreaseSize = () => {\r\n    if (this.state.size > 80) {\r\n      this.setState({ size: (this.state.size -= 10) });\r\n    }\r\n  };\r\n  handleIncreaseSize = () => {\r\n    if (this.state.size < 300) {\r\n      this.setState({ size: (this.state.size += 10) });\r\n    }\r\n  };\r\n  changeNextNumber = dice => {\r\n    const dices = [...this.state.dices];\r\n    const index = dices.indexOf(dice);\r\n    dices[index] = { ...dice };\r\n    dices[index].value < 6 ? dices[index].value++ : (dices[index].value = 1);\r\n    this.setState({ dices });\r\n    this.getNumberRepetitions();\r\n  };\r\n  changePreviousNumber = dice => {\r\n    const dices = [...this.state.dices];\r\n    const index = dices.indexOf(dice);\r\n    dices[index] = { ...dice };\r\n    dices[index].value > 1 ? dices[index].value-- : (dices[index].value = 6);\r\n    this.setState({ dices });\r\n    this.getNumberRepetitions();\r\n  };\r\n\r\n  handleDeleteDice = diceid => {\r\n    const dices = this.state.dices.filter(d => d.id !== diceid);\r\n    this.setState({ dices });\r\n    this.getNumberRepetitions();\r\n  };\r\n\r\n  handleAddDice = () => {\r\n    let random = 1 + Math.floor(Math.random() * 6);\r\n    let dices = this.state.dices;\r\n    let idd = dices.length;\r\n    dices.push({ id: idd + 1, value: random });\r\n    this.setState({ dices: dices });\r\n    this.getNumberRepetitions();\r\n  };\r\n\r\n  handleReset = () => {\r\n    const dices = [];\r\n    this.setState({ dices });\r\n    this.getNumberRepetitions();\r\n  };\r\n\r\n  handleRandom = () => {\r\n    const dices = this.state.dices.map(d => {\r\n      d.value = 1 + Math.floor(Math.random() * 6);\r\n      return d;\r\n    });\r\n    this.setState({ dices });\r\n    this.getNumberRepetitions();\r\n  };\r\n\r\n  getTotalDices() {\r\n    return this.state.dices.length;\r\n  }\r\n  getNumberRepetitions = () => {\r\n    let counter = [0, 0, 0, 0, 0, 0];\r\n    for (let i = 0; i < this.state.dices.length; i++) {\r\n      const element = this.state.dices[i];\r\n      if (element.value == 1) {\r\n        counter[0] = counter[0] += 1;\r\n      }\r\n      if (element.value == 2) {\r\n        counter[1] = counter[1] += 1;\r\n      }\r\n      if (element.value == 3) {\r\n        counter[2] = counter[2] += 1;\r\n      }\r\n      if (element.value == 4) {\r\n        counter[3] = counter[3] += 1;\r\n      }\r\n      if (element.value == 5) {\r\n        counter[4] = counter[4] += 1;\r\n      }\r\n      if (element.value == 6) {\r\n        counter[5] = counter[5] += 1;\r\n      }\r\n    }\r\n    // console.log(\"counting...\", counter);\r\n    this.setState({ counters: counter });\r\n  };\r\n}\r\n\r\nexport default Dices;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./css/dice.css\";\r\nimport Counter from \"./components/counter\";\r\nimport Dices from \"./components/dices\";\r\n\r\nconst element = <h1>Hello World</h1>;\r\nconsole.log(element);\r\n\r\nReactDOM.render(<Dices amount={100} />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}